{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/aside/aside.component.ts","webpack:///src/app/components/aside/aside.component.html","webpack:///src/app/components/create/create.component.ts","webpack:///src/app/components/create/create.component.html","webpack:///src/app/components/edit/edit.component.ts","webpack:///src/app/components/edit/edit.component.html","webpack:///src/app/components/header/header.component.ts","webpack:///src/app/components/header/header.component.html","webpack:///src/app/components/main/main.component.ts","webpack:///src/app/components/main/main.component.html","webpack:///src/app/components/notfound/notfound.component.ts","webpack:///src/app/components/notfound/notfound.component.html","webpack:///src/app/components/task/task.component.ts","webpack:///src/app/components/task/task.component.html","webpack:///src/app/material/material.module.ts","webpack:///src/app/services/store/store.service.ts","webpack:///src/app/services/todo/todolist.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","menuMode","state","opened","elem","nativeElement","offsetWidth","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AsideComponent","CreateComponent","data","storeService","minDate","Date","disabled","addTodoForm","deadline","priority","statusChanges","subscribe","status","controls","setValue","value","toISOString","split","addTodoList","alert","add","EditComponent","todoService","editTodoForm","task","console","log","updateTodo","_id","message","edit","HeaderComponent","dialog","router","tasksToday","tasksCompleted","tasksOverdue","open","toggleSideBar","createTask","MainComponent","step","getData","todoList","NotfoundComponent","TaskComponent","snackBar","index","action","event","snackBarRef","duration","afterDismissed","onAction","deleteTodoList","setStep","deleteTask","$event","editTask","nextStep","MaterialComponents","MaterialModule","StoreService","messages","getTodoList","getTodos","map","i","next","todo","addTodo","getValue","deleteTodo","filter","form","providedIn","httpOptions","headers","TodoListService","http","operation","result","error","name","get","pipe","handleError","append","post","res","put","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import {Component, ElementRef, ViewChild, AfterViewInit, Output} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements AfterViewInit{\r\n  title = 'todo';\r\n  menuMode = 'side';\r\n  @Output()\r\n  state = {\r\n    opened: false\r\n  };\r\n\r\n  @ViewChild('wrapper') elem: ElementRef;\r\n\r\n  ngAfterViewInit() {\r\n    if (this.elem.nativeElement.offsetWidth <= 700) {\r\n      this.menuMode = 'over';\r\n    } else {\r\n      this.menuMode = 'side';\r\n    }\r\n  }\r\n\r\n  constructor(){}\r\n\r\n}\r\n","<div class=\"container\">\r\n  <app-header  [state]=\"state\"></app-header>\r\n  <div class=\"main\"  #wrapper>\r\n    <mat-sidenav-container class=\"main_container\">\r\n      <mat-sidenav #sidenav [(opened)] = \"state.opened\" [mode]=\"menuMode\" class=\"main_left\">\r\n        <app-aside></app-aside>\r\n      </mat-sidenav>\r\n      <mat-sidenav-content class=\"main_right\">\r\n        <app-main></app-main>\r\n      </mat-sidenav-content>\r\n    </mat-sidenav-container>\r\n  </div>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { MaterialModule } from './material/material.module';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { TaskComponent } from './components/task/task.component';\r\nimport { NotfoundComponent } from './components/notfound/notfound.component';\r\nimport { CreateComponent } from './components/create/create.component';\r\nimport { AsideComponent } from './components/aside/aside.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { MainComponent } from './components/main/main.component';\r\nimport { EditComponent } from './components/edit/edit.component';\r\n\r\nimport { TodoListService } from './services/todo/todolist.service';\r\nimport { StoreService } from './services/store/store.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    TaskComponent,\r\n    NotfoundComponent,\r\n    CreateComponent,\r\n    AsideComponent,\r\n    HeaderComponent,\r\n    MainComponent,\r\n    EditComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  providers: [TodoListService, StoreService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-aside',\r\n  templateUrl: './aside.component.html',\r\n  styleUrls: ['./aside.component.scss']\r\n})\r\nexport class AsideComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"aside\">\r\n  <h1 class=\"aside_title\">Filters</h1>\r\n  <div class=\"aside_block\">\r\n    <button mat-raised-button class=\"aside_button\">\r\n      <mat-icon>today</mat-icon>&nbsp;&nbsp;\r\n      Today tasks\r\n    </button>\r\n  </div>\r\n  <div class=\"aside_block\">\r\n    <button mat-raised-button class=\"aside_button\">\r\n      <mat-icon>view_comfy</mat-icon>&nbsp;&nbsp;\r\n      Upcoming tasks\r\n    </button>\r\n  </div>\r\n  <div class=\"aside_block\">\r\n    <button mat-raised-button class=\"aside_button\">\r\n      <mat-icon>history</mat-icon>&nbsp;&nbsp;\r\n      Expired tasks\r\n    </button>\r\n  </div>\r\n  <div class=\"aside_block\">\r\n    <button mat-raised-button class=\"aside_button\">\r\n      <mat-icon>check_circle</mat-icon>&nbsp;&nbsp;\r\n      Completed tasks\r\n    </button>\r\n  </div>\r\n  <div class=\"aside_block\">\r\n    <button mat-raised-button class=\"aside_button\">\r\n      <mat-icon>clear</mat-icon>&nbsp;&nbsp;\r\n      Clear filter\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { StoreService } from '../../services/store/store.service';\r\n\r\n@Component({\r\n  selector: 'app-dialog',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss']\r\n})\r\nexport class CreateComponent implements OnInit {\r\n  minDate = new Date();\r\n  public addTodoForm: FormGroup;\r\n  disabled = true;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private storeService: StoreService\r\n  ) {\r\n    this.addTodoForm = new FormGroup({\r\n      title: new FormControl(),\r\n      deadline: new FormControl(),\r\n      priority: new FormControl(),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addTodoForm.statusChanges.subscribe((status) => {\r\n      this.disabled = status !== 'VALID';\r\n    });\r\n  }\r\n\r\n  public add() {\r\n    if (this.addTodoForm.status === 'VALID'){\r\n      this.addTodoForm.controls.deadline.setValue((this.addTodoForm.value.deadline.toISOString()).split('T')[0]);\r\n      this.storeService.addTodoList(this.addTodoForm.value);\r\n    }else{\r\n      alert('Form does not valid');\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"dialog\">\r\n  <h2 mat-dialog-title class=\"dialog_title\">Create task</h2>\r\n  <form [formGroup]=\"addTodoForm\">\r\n  <mat-dialog-content class=\"dialog_content\">\r\n      <mat-form-field floatLabel=\"auto\" appearance=\"outline\" class=\"form_element form_text\">\r\n        <mat-label class=\"form_label\">New task (example - \"buy food\")</mat-label>\r\n        <input type=\"text\" matInput required formControlName=\"title\" class=\"form_input\"/>\r\n        <mat-hint class=\"form_hint\">Field are required!</mat-hint>\r\n      </mat-form-field>\r\n      <mat-form-field\r\n        floatLabel=\"auto\"\r\n        appearance=\"outline\"\r\n        class=\"form_element form_date\"\r\n      >\r\n        <mat-label class=\"form_label\">Deadline</mat-label>\r\n        <input\r\n          [matDatepicker]=\"taskDate\"\r\n          [min]=\"minDate\"\r\n          matInput\r\n          required\r\n          formControlName=\"deadline\"\r\n          class=\"form_input\"/>\r\n        <mat-datepicker-toggle matSuffix [for]=\"taskDate\"></mat-datepicker-toggle>\r\n        <mat-datepicker #taskDate></mat-datepicker>\r\n        <mat-hint class=\"form_hint\">Field are required!</mat-hint>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" class=\"form_element form_priority\">\r\n        <mat-label>Priority</mat-label>\r\n        <mat-select required  formControlName=\"priority\">\r\n          <mat-option value=\"critical\">\r\n            <p style=\"color: red\">Critical</p>\r\n          </mat-option>\r\n          <mat-option value=\"medium\">\r\n            <p style=\"color: green\">Medium</p>\r\n          </mat-option>\r\n          <mat-option value=\"low\">\r\n            <p style=\"color: darkblue\">Low</p>\r\n          </mat-option>\r\n        </mat-select>\r\n        <mat-hint class=\"form_hint\">Field are required!</mat-hint>\r\n      </mat-form-field>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions class=\"dialog_actions\">\r\n    <button mat-raised-button mat-dialog-close [disabled]=\"disabled\" (click)=\"add()\" class=\"dialog_button\">Save</button>\r\n    <button mat-button mat-dialog-close class=\"dialog_button\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </mat-dialog-actions>\r\n  </form>\r\n</div>\r\n","import {Component, OnInit, Inject} from '@angular/core';\r\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport {FormControl, FormGroup} from '@angular/forms';\r\nimport {TodoListService} from '../../services/todo/todolist.service';\r\n\r\n@Component({\r\n  selector: 'app-edit',\r\n  templateUrl: './edit.component.html',\r\n  styleUrls: ['./edit.component.scss']\r\n})\r\nexport class EditComponent implements OnInit {\r\n  minDate = new Date();\r\n  public editTodoForm: FormGroup;\r\n  disabled = true;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private todoService: TodoListService\r\n  ) {\r\n    this.editTodoForm = new FormGroup({\r\n      title: new FormControl(this.data.task.title),\r\n      deadline: new FormControl(this.data.task.deadline),\r\n      priority: new FormControl(this.data.task.priority),\r\n    });\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.editTodoForm.statusChanges.subscribe((status) => {\r\n      this.disabled = status !== 'VALID';\r\n    });\r\n  }\r\n\r\n  public edit() {\r\n    if (this.editTodoForm.status === 'VALID') {\r\n      console.log(this.editTodoForm.value);\r\n      this.editTodoForm.controls.deadline.setValue((this.editTodoForm.value.deadline.toISOString()).split('T')[0]);\r\n      console.log(this.editTodoForm.value);\r\n      console.log(typeof this.editTodoForm.value.deadline);\r\n\r\n      this.todoService.updateTodo(this.data.task._id, this.editTodoForm.value)\r\n        .subscribe(data => {\r\n          alert(data.message);\r\n        });\r\n\r\n    } else {\r\n      alert('Form does not valid');\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"dialog\">\r\n  <h2 mat-dialog-title class=\"dialog_title\">Edit task</h2>\r\n  <form [formGroup]=\"editTodoForm\">\r\n    <mat-dialog-content class=\"dialog_content\">\r\n      <mat-form-field floatLabel=\"auto\" appearance=\"outline\" class=\"form_element form_text\">\r\n        <mat-label class=\"form_label\">New title</mat-label>\r\n        <input\r\n          type=\"text\"\r\n          matInput required\r\n          formControlName=\"title\"\r\n          class=\"form_input\"\r\n        />\r\n        <mat-hint class=\"form_hint\">Field are required!</mat-hint>\r\n      </mat-form-field>\r\n      <mat-form-field\r\n        floatLabel=\"auto\"\r\n        appearance=\"outline\"\r\n        class=\"form_element form_date\"\r\n      >\r\n        <mat-label class=\"form_label\">New deadline</mat-label>\r\n        <input\r\n          [matDatepicker]=\"taskDate\"\r\n          [min]=\"minDate\"\r\n          matInput\r\n          required\r\n          formControlName=\"deadline\"\r\n          class=\"form_input\"/>\r\n        <mat-datepicker-toggle matSuffix [for]=\"taskDate\"></mat-datepicker-toggle>\r\n        <mat-datepicker #taskDate></mat-datepicker>\r\n        <mat-hint class=\"form_hint\">Field are required!</mat-hint>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" class=\"form_element form_priority\">\r\n        <mat-label>New priority</mat-label>\r\n        <mat-select required formControlName=\"priority\">\r\n          <mat-option value=\"critical\">\r\n            <p style=\"color: red\">Critical</p>\r\n          </mat-option>\r\n          <mat-option value=\"medium\">\r\n            <p style=\"color: green\">Medium</p>\r\n          </mat-option>\r\n          <mat-option value=\"low\">\r\n            <p style=\"color: darkblue\">Low</p>\r\n          </mat-option>\r\n        </mat-select>\r\n        <mat-hint class=\"form_hint\">Field are required!</mat-hint>\r\n      </mat-form-field>\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions class=\"dialog_actions\">\r\n      <button mat-raised-button mat-dialog-close [disabled]=\"disabled\" (click)=\"edit()\" class=\"dialog_button\">Save</button>\r\n      <button mat-button mat-dialog-close class=\"dialog_button\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </mat-dialog-actions>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  tasksToday = 5;\r\n  tasksCompleted = 0;\r\n  tasksOverdue = 2;\r\n\r\n  @Input() state;\r\n\r\n  constructor(public dialog: MatDialog, private router: Router){\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  createTask() {\r\n    this.dialog.open(CreateComponent);\r\n  }\r\n\r\n  toggleSideBar() {\r\n    this.state.opened = !this.state.opened;\r\n  }\r\n\r\n}\r\n","<div class=\"navigation\">\r\n  <mat-toolbar color=\"accent\" class=\"navigation_block\">\r\n    <div>\r\n      <button (click)=\"toggleSideBar()\" mat-button class=\"navigation_button\">\r\n        <mat-icon matTooltip=\"Toggle sidebar\">menu</mat-icon>\r\n      </button>\r\n      <mat-form-field floatLabel=\"never\">\r\n        <mat-label class=\"form_label\">Search</mat-label>\r\n        <input type=\"text\" matInput/>\r\n        <mat-icon>search</mat-icon>&nbsp;&nbsp;\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"navigation_buttonsBlock\">\r\n      <button mat-button (click)=\"createTask()\" class=\"navigation_button\">\r\n        <mat-icon matTooltip=\"Create new task\">\r\n          add_circle_outline\r\n        </mat-icon>\r\n      </button>\r\n      <button mat-button class=\"navigation_button\">\r\n        <mat-icon\r\n          [matBadge]=\"tasksCompleted +'/'+ tasksToday\"\r\n          matTooltip=\"Completed tasks today\"\r\n          matBadgeOverlap=\"false\"\r\n          [matBadgeHidden]=\"tasksToday === 0\">\r\n          trending_up\r\n        </mat-icon>\r\n      </button>\r\n      <button mat-button class=\"navigation_button\">\r\n        <mat-icon\r\n          [matBadge]=\"tasksOverdue\"\r\n          matTooltip=\"Expired tasks\"\r\n          matBadgeOverlap=\"false\"\r\n          [matBadgeHidden]=\"tasksOverdue === 0\">\r\n          schedule\r\n        </mat-icon>\r\n      </button>\r\n    </div>\r\n  </mat-toolbar>\r\n</div>\r\n","import { Component, OnInit, Output } from '@angular/core';\r\nimport Itodo from '../../services/todo/Itodo';\r\nimport { StoreService } from '../../services/store/store.service';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.scss']\r\n})\r\nexport class MainComponent implements OnInit {\r\n  todoList: Itodo[];\r\n  @Output()\r\n  state = {\r\n    step: -1\r\n  };\r\n\r\n  constructor(private storeService: StoreService) {\r\n    this.storeService.getData().subscribe(data => {\r\n      this.todoList = data;\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"tasks\">\r\n  <div class=\"filter\">\r\n    <mat-accordion>\r\n      <ng-container  *ngFor=\"let task of todoList; let i = index\">\r\n        <app-task [task]=\"task\" [index]=\"i\" [state]=\"state\"></app-task>\r\n      </ng-container>\r\n    </mat-accordion>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-notfound',\r\n  templateUrl: './notfound.component.html',\r\n  styleUrls: ['./notfound.component.scss']\r\n})\r\nexport class NotfoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div>\r\n  <p>Page not found!</p>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {EditComponent} from '../edit/edit.component';\r\nimport { StoreService } from '../../services/store/store.service';\r\n\r\n@Component({\r\n  selector: 'app-task',\r\n  templateUrl: './task.component.html',\r\n  styleUrls: ['./task.component.scss']\r\n})\r\nexport class TaskComponent implements OnInit {\r\n  @Input() task;\r\n  @Input() index;\r\n  @Input() state;\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    public dialog: MatDialog,\r\n    private storeService: StoreService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  setStep(index: number) {\r\n    this.state.step = index;\r\n  }\r\n\r\n  nextStep() {\r\n    this.state.step++;\r\n  }\r\n\r\n  prevStep() {\r\n    this.state.step--;\r\n  }\r\n\r\n    deleteTask(message, action, event) {\r\n    const snackBarRef = this.snackBar.open(message, action, {duration: 4000});\r\n    snackBarRef.afterDismissed().subscribe(() => {\r\n      console.log('Snackbar was dismissed');\r\n    });\r\n    snackBarRef.onAction().subscribe(() => {\r\n      this.storeService.deleteTodoList(this.task._id);\r\n    });\r\n  }\r\n\r\n  editTask() {\r\n    this.dialog.open(EditComponent, {\r\n      data: {\r\n        task: this.task\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<mat-expansion-panel [expanded]=\"state.step === index\" (opened)=\"setStep(index)\">\r\n  <mat-expansion-panel-header>\r\n    <mat-panel-title>{{'Task number ' + (+index + 1)}}</mat-panel-title>\r\n    <mat-panel-description>\r\n      {{task.title}}\r\n    </mat-panel-description>\r\n  </mat-expansion-panel-header>\r\n  <mat-card-content>\r\n    <mat-icon [class]=\"task.priority\" [matTooltip]=\"'Task priority:&nbsp;&nbsp;' + task.priority\">flag</mat-icon>&nbsp;&nbsp;\r\n    <mat-checkbox [(ngModel)]=\"task.completed\" labelPosition=\"before\">\r\n      {{task.title}}\r\n    </mat-checkbox>\r\n    <br/>\r\n    <br/>\r\n    <p>\r\n      Deadline:&nbsp;&nbsp;{{task.deadline | date:'fullDate'}}\r\n    </p>\r\n  </mat-card-content>\r\n  <mat-action-row>\r\n    <mat-action-list>\r\n      <button\r\n        mat-mini-fab\r\n        color=\"primary\"\r\n        matTooltip=\"Delete task\"\r\n        (click)=\"deleteTask('Delete item?', 'Confirm', $event)\"\r\n      >\r\n        <mat-icon [id]=\"task._id\">delete</mat-icon>\r\n      </button>\r\n      <button\r\n        mat-mini-fab\r\n        color=\"primary\"\r\n        matTooltip=\"Edit task\"\r\n        (click)=\"editTask()\"\r\n      >\r\n        <mat-icon [id]=\"task.id\">edit</mat-icon>\r\n      </button>\r\n    </mat-action-list>\r\n    <mat-action-list>\r\n      <button *ngIf=\"index!==0\" mat-button color=\"warn\" (click)=\"prevStep()\">Previous</button>\r\n      <button mat-button color=\"primary\" (click)=\"nextStep()\">Next</button>\r\n    </mat-action-list>\r\n  </mat-action-row>\r\n</mat-expansion-panel>\r\n","import { NgModule } from '@angular/core';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatNativeDateModule} from '@angular/material/core';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\n\r\nconst MaterialComponents = [\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatIconModule,\r\n  MatBadgeModule,\r\n  MatProgressSpinnerModule,\r\n  MatProgressBarModule,\r\n  MatToolbarModule,\r\n  MatSidenavModule,\r\n  MatMenuModule,\r\n  MatListModule,\r\n  MatDividerModule,\r\n  MatGridListModule,\r\n  MatExpansionModule,\r\n  MatCardModule,\r\n  MatTabsModule,\r\n  MatStepperModule,\r\n  MatDialogModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatSelectModule,\r\n  MatAutocompleteModule,\r\n  MatCheckboxModule,\r\n  MatTooltipModule,\r\n  MatDatepickerModule,\r\n  MatNativeDateModule,\r\n  MatSnackBarModule\r\n];\r\n\r\n@NgModule({\r\n  imports: [MaterialComponents],\r\n  exports: [MaterialComponents]\r\n})\r\nexport class MaterialModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport Itodo from '../todo/Itodo';\r\nimport { TodoListService } from '../todo/todolist.service';\r\nimport { BehaviorSubject, Observable} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StoreService{\r\n\r\n  todoList = new BehaviorSubject([]);\r\n  messages = new BehaviorSubject('');\r\n\r\n  constructor(private todoService: TodoListService) {\r\n    this.getTodoList();\r\n  }\r\n\r\n  getTodoList(): void {\r\n    this.todoService.getTodos()\r\n      .subscribe(data => {\r\n        data.map(i => i.deadline = new Date(i.deadline));\r\n        this.todoList.next(data);\r\n      });\r\n  }\r\n\r\n  addTodoList(todo): void {\r\n    this.todoService.addTodo(todo)\r\n      .subscribe(data => {\r\n        this.messages.next(data.message);\r\n        this.todoList.next([...this.todoList.getValue(), ...data.todo]);\r\n      });\r\n  }\r\n\r\n  deleteTodoList(id): void {\r\n    this.todoService.deleteTodo(id)\r\n      .subscribe(data => {\r\n        this.messages.next(data.message);\r\n        this.todoList.next(this.todoList.getValue().filter(i => i._id !== id));\r\n      });\r\n  }\r\n\r\n  editTodoList(id, form): void {\r\n    this.todoService.updateTodo(id, form)\r\n      .subscribe(data => {\r\n        this.messages.next(data.message);\r\n        this.todoList.next(this.todoList.getValue().filter(i => i._id !== id));\r\n      });\r\n\r\n  }\r\n\r\n  getData(): Observable<Itodo[]> {\r\n    return this.todoList;\r\n  }\r\n\r\n  getMessages(): Observable<any> {\r\n    return this.messages;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport Itodo from '../todo/Itodo';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({'Content-type': 'application/json'})\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TodoListService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n  return(error: any): Observable<T> => {\r\n    alert(error.name);\r\n    console.error(error);\r\n    return of(result as T);\r\n  };\r\n  }\r\n\r\n  getTodos(): Observable<Itodo[]> {\r\n    return this.http.get<Itodo[]>(\r\n      'http://localhost:8080/api/todo', httpOptions)\r\n          .pipe(\r\n            tap(() => console.log('Fetched todo')),\r\n            catchError(this.handleError('getTodo', []))\r\n          );\r\n  }\r\n\r\n  addTodo(form): Observable<any> {\r\n    const headers = new HttpHeaders();\r\n    headers.append('Content-type', 'application/json');\r\n\r\n    return this.http.post<any>(\r\n      'http://localhost:8080/api/todo', form, {headers})\r\n      .pipe(\r\n        catchError(this.handleError('addTodo', [])),\r\n        map(res => res)\r\n      );\r\n  }\r\n\r\n  updateTodo(id: string, todo: Itodo): Observable<any> {\r\n    return this.http.put<any>(`api/todo/${id}`, todo, httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError<any>('updateTodo')),\r\n        map(res => res)\r\n      );\r\n  }\r\n\r\n  deleteTodo(id: string): Observable<any> {\r\n    return this.http.delete(\r\n      `api/todo/${id}`, httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError<any>('deleteTodo')),\r\n        map(res => res)\r\n      );\r\n\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}